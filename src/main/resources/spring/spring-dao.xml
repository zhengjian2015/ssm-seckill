<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关配置-->
	<bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
	<!-- 2.数据库链接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->  
		<property name="driverClass" value="${driver}"></property>  
        <property name="jdbcUrl" value="${url}"></property>  
        <property name="user" value="${username}"></property>  
        <property name="password" value="${password}"></property>  
         <!-- 配置连接池私有属性 --> 
         <!-- 关闭连接后不自动commit --> 
        <property name="autoCommitOnClose" value="false"></property> 
        <!-- 获取连接超时是按 -->  
        <property name="checkoutTimeout" value="3000"></property>
        <property name="acquireRetryAttempts" value="2"/>
        <property name="minPoolSize" value="10"></property>
        <property name="maxPoolSize" value="30"></property>
    </bean>  
    
    <!-- 配置SqlsessionFactory对象 -->
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <!-- 注入数据库链接池 -->
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描xml文件 -->
        <property name="mapperLocations" value="classpath:org/seckill/mapper/*.xml"></property> 
    </bean>
    
    <!-- 扫描dao层，动态实现dao -->
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
    	<!--给出需要扫描的接口包 -->
        <property name="basePackage" value="org.seckill.dao" />  
        <!-- 注入sqlsessionfactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean> 
    <!-- RedisDao -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
    	<constructor-arg index="0" value="localhost"></constructor-arg>
    	<constructor-arg index="1" value="6379"></constructor-arg>
    </bean> 
</beans>